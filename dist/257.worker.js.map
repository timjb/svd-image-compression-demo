{"version":3,"sources":["webpack://svd-image-compression-demo/./svd-image-compression-worker/pkg/svd_image_compression_worker_bg.js"],"names":["cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getStringFromWasm0","ptr","len","buffer","Uint8Array","subarray","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","getObject","takeObject","ret","dropObject","cachegetFloat64Memory0","WASM_VECTOR_LEN","passArrayF64ToWasm0","arg","malloc","Float64Array","set","svd","a_data","nrows","ncols","ptr0","len0","SvdResult","__wrap","svd_simple_approx","t","Object","create","prototype","this","__wbindgen_string_new","arg0","arg1","__wbindgen_object_drop_ref","__wbg_log_f2e13ca55da8bad3","console","log","__wbg_time_7b20e0fb24128e35","time","__wbg_timeEnd_533927dc25d673d0","timeEnd","__wbg_buffer_3f12a1c608c6d04e","__wbg_newwithbyteoffsetandlength_8afac2562e3f4472","arg2","__wbindgen_throw","Error","__wbindgen_memory"],"mappings":"ktBAIA,IAAIA,EAAoB,IAFoB,oBAAhBC,aAA8B,EAAIC,EAAOC,SAAS,QAAQF,YAAcA,aAE3D,QAAS,CAAEG,WAAW,EAAMC,OAAO,IAE5EL,EAAkBM,SAElB,IAAIC,EAAuB,KAQ3B,SAASC,EAAmBC,EAAKC,GAC7B,OAAOV,EAAkBM,QAPI,OAAzBC,GAAiCA,EAAqBI,SAAW,kBACjEJ,EAAuB,IAAIK,WAAW,kBAEnCL,GAI2CM,SAASJ,EAAKA,EAAMC,IAG1E,MAAMI,EAAO,IAAIC,MAAM,IAAIC,UAAKC,GAEhCH,EAAKI,UAAKD,EAAW,MAAM,GAAM,GAEjC,IAAIE,EAAYL,EAAKM,OAErB,SAASC,EAAcC,GACfH,IAAcL,EAAKM,QAAQN,EAAKI,KAAKJ,EAAKM,OAAS,GACvD,MAAMG,EAAMJ,EAIZ,OAHAA,EAAYL,EAAKS,GAEjBT,EAAKS,GAAOD,EACLC,EAGX,SAASC,EAAUD,GAAO,OAAOT,EAAKS,GAQtC,SAASE,EAAWF,GAChB,MAAMG,EAAMF,EAAUD,GAEtB,OATJ,SAAoBA,GACZA,EAAM,KACVT,EAAKS,GAAOJ,EACZA,EAAYI,GAKZI,CAAWJ,GACJG,EAGX,IAAIE,EAAyB,KAQzBC,EAAkB,EAEtB,SAASC,EAAoBC,EAAKC,GAC9B,MAAMvB,EAAMuB,EAAoB,EAAbD,EAAIX,QAGvB,OAZ+B,OAA3BQ,GAAmCA,EAAuBjB,SAAW,kBACrEiB,EAAyB,IAAIK,aAAa,kBAEvCL,GAOaM,IAAIH,EAAKtB,EAAM,GACnCoB,EAAkBE,EAAIX,OACfX,EAQJ,SAAS0B,EAAIC,EAAQC,EAAOC,GAC/B,IAAIC,EAAOT,EAAoBM,EAAQ,qBACnCI,EAAOX,EACPH,EAAM,MAASa,EAAMC,EAAMH,EAAOC,GACtC,OAAOG,EAAUC,OAAOhB,GAUrB,SAASiB,EAAkBP,EAAQC,EAAOC,EAAOM,GACpD,IAAIL,EAAOT,EAAoBM,EAAQ,qBACnCI,EAAOX,EACPH,EAAM,oBAAuBa,EAAMC,EAAMH,EAAOC,EAAOM,GAC3D,OAAOH,EAAUC,OAAOhB,GAKrB,MAAMe,EAET,cAAchC,GACV,MAAMa,EAAMuB,OAAOC,OAAOL,EAAUM,WAGpC,OAFAzB,EAAIb,IAAMA,EAEHa,EAGX,OACI,MAAMb,EAAMuC,KAAKvC,IACjBuC,KAAKvC,IAAM,EAEX,uBAA0BA,GAK9B,IAEI,OAAOgB,EADG,cAAiBuB,KAAKvC,MAMpC,kBAEI,OAAOgB,EADG,4BAA+BuB,KAAKvC,MAMlD,MAEI,OAAOgB,EADG,gBAAmBuB,KAAKvC,OAKnC,MAAMwC,EAAwB,SAASC,EAAMC,GAEhD,OAAO9B,EADGb,EAAmB0C,EAAMC,KAI1BC,EAA6B,SAASF,GAC/CzB,EAAWyB,IAGFG,EAA6B,SAASH,GAC/CI,QAAQC,IAAI/B,EAAU0B,KAGbM,EAA8B,SAASN,EAAMC,GACtDG,QAAQG,KAAKjD,EAAmB0C,EAAMC,KAG7BO,EAAiC,SAASR,EAAMC,GACzDG,QAAQK,QAAQnD,EAAmB0C,EAAMC,KAGhCS,EAAgC,SAASV,GAElD,OAAO7B,EADGG,EAAU0B,GAAMvC,SAIjBkD,EAAoD,SAASX,EAAMC,EAAMW,GAElF,OAAOzC,EADG,IAAIY,aAAaT,EAAU0B,GAAOC,IAAS,EAAGW,IAAS,KAIxDC,EAAmB,SAASb,EAAMC,GAC3C,MAAM,IAAIa,MAAMxD,EAAmB0C,EAAMC,KAGhCc,EAAoB,WAE7B,OAAO5C,EADG,Y","file":"257.worker.js","sourcesContent":["import * as wasm from './svd_image_compression_worker_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet cachegetFloat64Memory0 = null;\nfunction getFloat64Memory0() {\n    if (cachegetFloat64Memory0 === null || cachegetFloat64Memory0.buffer !== wasm.memory.buffer) {\n        cachegetFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachegetFloat64Memory0;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArrayF64ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 8);\n    getFloat64Memory0().set(arg, ptr / 8);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {Float64Array} a_data\n* @param {number} nrows\n* @param {number} ncols\n* @returns {SvdResult}\n*/\nexport function svd(a_data, nrows, ncols) {\n    var ptr0 = passArrayF64ToWasm0(a_data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.svd(ptr0, len0, nrows, ncols);\n    return SvdResult.__wrap(ret);\n}\n\n/**\n* @param {Float64Array} a_data\n* @param {number} nrows\n* @param {number} ncols\n* @param {number} t\n* @returns {SvdResult}\n*/\nexport function svd_simple_approx(a_data, nrows, ncols, t) {\n    var ptr0 = passArrayF64ToWasm0(a_data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.svd_simple_approx(ptr0, len0, nrows, ncols, t);\n    return SvdResult.__wrap(ret);\n}\n\n/**\n*/\nexport class SvdResult {\n\n    static __wrap(ptr) {\n        const obj = Object.create(SvdResult.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_svdresult_free(ptr);\n    }\n    /**\n    * @returns {Float64Array}\n    */\n    u() {\n        var ret = wasm.svdresult_u(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {Float64Array}\n    */\n    singular_values() {\n        var ret = wasm.svdresult_singular_values(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {Float64Array}\n    */\n    v_t() {\n        var ret = wasm.svdresult_v_t(this.ptr);\n        return takeObject(ret);\n    }\n}\n\nexport const __wbindgen_string_new = function(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbg_log_f2e13ca55da8bad3 = function(arg0) {\n    console.log(getObject(arg0));\n};\n\nexport const __wbg_time_7b20e0fb24128e35 = function(arg0, arg1) {\n    console.time(getStringFromWasm0(arg0, arg1));\n};\n\nexport const __wbg_timeEnd_533927dc25d673d0 = function(arg0, arg1) {\n    console.timeEnd(getStringFromWasm0(arg0, arg1));\n};\n\nexport const __wbg_buffer_3f12a1c608c6d04e = function(arg0) {\n    var ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_newwithbyteoffsetandlength_8afac2562e3f4472 = function(arg0, arg1, arg2) {\n    var ret = new Float64Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport const __wbindgen_memory = function() {\n    var ret = wasm.memory;\n    return addHeapObject(ret);\n};\n\n"],"sourceRoot":""}