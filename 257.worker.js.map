{"version":3,"sources":["webpack://svd-image-compression-demo/./svd-image-compression-worker/pkg/svd_image_compression_worker_bg.js"],"names":["heap","Array","fill","undefined","getObject","idx","push","heap_next","length","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","Uint8Array","getStringFromWasm0","ptr","len","subarray","addHeapObject","obj","set_panic_hook","cachegetFloat64Memory0","WASM_VECTOR_LEN","passArrayF64ToWasm0","arg","malloc","Float64Array","set","svd","a_data","nrows","ncols","ptr0","len0","SvdResult","__wrap","svd_simple_approx","t","cachedTextEncoder","TextEncoder","encodeString","encodeInto","view","buf","encode","read","written","cachegetInt32Memory0","getInt32Memory0","Int32Array","Object","create","prototype","this","req_rank","__wbg_new_59cb74e423758ede","Error","__wbg_stack_558ba5917b466edd","arg0","arg1","realloc","mem","offset","code","charCodeAt","slice","passStringToWasm0","stack","__wbg_error_4bb6c2a97407129a","console","error","__wbindgen_object_drop_ref","__wbg_time_7b20e0fb24128e35","time","__wbg_timeEnd_533927dc25d673d0","timeEnd","__wbg_buffer_3f12a1c608c6d04e","__wbg_newwithbyteoffsetandlength_8afac2562e3f4472","arg2","__wbindgen_throw","__wbindgen_memory"],"mappings":"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","file":"257.worker.js","sourcesContent":["import * as wasm from './svd_image_compression_worker_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n/**\n*/\nexport function set_panic_hook() {\n    wasm.set_panic_hook();\n}\n\nlet cachegetFloat64Memory0 = null;\nfunction getFloat64Memory0() {\n    if (cachegetFloat64Memory0 === null || cachegetFloat64Memory0.buffer !== wasm.memory.buffer) {\n        cachegetFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachegetFloat64Memory0;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArrayF64ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 8);\n    getFloat64Memory0().set(arg, ptr / 8);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {Float64Array} a_data\n* @param {number} nrows\n* @param {number} ncols\n* @returns {SvdResult}\n*/\nexport function svd(a_data, nrows, ncols) {\n    var ptr0 = passArrayF64ToWasm0(a_data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.svd(ptr0, len0, nrows, ncols);\n    return SvdResult.__wrap(ret);\n}\n\n/**\n* @param {Float64Array} a_data\n* @param {number} nrows\n* @param {number} ncols\n* @param {number} t\n* @returns {SvdResult}\n*/\nexport function svd_simple_approx(a_data, nrows, ncols, t) {\n    var ptr0 = passArrayF64ToWasm0(a_data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.svd_simple_approx(ptr0, len0, nrows, ncols, t);\n    return SvdResult.__wrap(ret);\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n/**\n*/\nexport class SvdResult {\n\n    static __wrap(ptr) {\n        const obj = Object.create(SvdResult.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_svdresult_free(ptr);\n    }\n    /**\n    * @returns {Float64Array}\n    */\n    singular_values() {\n        var ret = wasm.svdresult_singular_values(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @param {number} req_rank\n    * @returns {Float64Array}\n    */\n    compute_low_rank_approximation(req_rank) {\n        var ret = wasm.svdresult_compute_low_rank_approximation(this.ptr, req_rank);\n        return takeObject(ret);\n    }\n}\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbg_time_7b20e0fb24128e35 = function(arg0, arg1) {\n    console.time(getStringFromWasm0(arg0, arg1));\n};\n\nexport const __wbg_timeEnd_533927dc25d673d0 = function(arg0, arg1) {\n    console.timeEnd(getStringFromWasm0(arg0, arg1));\n};\n\nexport const __wbg_buffer_3f12a1c608c6d04e = function(arg0) {\n    var ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_newwithbyteoffsetandlength_8afac2562e3f4472 = function(arg0, arg1, arg2) {\n    var ret = new Float64Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport const __wbindgen_memory = function() {\n    var ret = wasm.memory;\n    return addHeapObject(ret);\n};\n\n"],"sourceRoot":""}